<Window
    x:Class="Edulink.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:classes="clr-namespace:Edulink.Classes"
    xmlns:converters="clr-namespace:Edulink.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:lex="http://wpflocalizeextension.codeplex.com"
    xmlns:local="clr-namespace:Edulink"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:Edulink.Models"
    xmlns:vm="clr-namespace:Edulink.ViewModels"
    Title="Edulink"
    Width="860"
    Height="480"
    MinWidth="600"
    MinHeight="300"
    d:DataContext="{d:DesignInstance vm:MainWindowViewModel}"
    lex:LocalizeDictionary.DesignCulture="{x:Static classes:LocalizationConfig.DesignCulture}"
    lex:ResxLocalizationProvider.DefaultAssembly="{x:Static classes:LocalizationConfig.DefaultAssembly}"
    lex:ResxLocalizationProvider.DefaultDictionary="{x:Static classes:LocalizationConfig.DefaultDictionary}"
    Closing="Window_Closing"
    KeyUp="Window_KeyUp"
    Style="{StaticResource MaterialDesignWindow}"
    UseLayoutRounding="True"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <Window.Resources>
        <converters:BooleanToSortDirectionConverter x:Key="BooleanToSortDirectionConverter" />
        <materialDesign:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <materialDesign:InvertBooleanConverter x:Key="InvertBooleanConverter" />
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="F5" Command="{Binding RefreshCommand}" />
        <KeyBinding
            Key="S"
            Command="{Binding SettingsCommand}"
            Modifiers="Ctrl" />
    </Window.InputBindings>
    <Grid>
        <DockPanel>
            <!--  Top bar menu  -->
            <Menu
                materialDesign:MenuAssist.MenuItemsPresenterMargin="0,6"
                materialDesign:MenuAssist.TopLevelMenuItemHeight="30"
                DockPanel.Dock="Top">
                <!--  File  -->
                <MenuItem Header="{lex:Loc Main.Menu.File}">
                    <MenuItem
                        Command="{Binding SettingsCommand}"
                        Header="{lex:Loc Main.Menu.File.Settings}"
                        Icon="{materialDesign:PackIcon Kind=Cog}"
                        InputGestureText="Ctrl + S" />
                    <Separator />
                    <MenuItem
                        Command="{Binding ExitCommand}"
                        Header="{lex:Loc Main.Menu.File.Exit}"
                        Icon="{materialDesign:PackIcon Kind=Close}"
                        InputGestureText="Alt + F4" />
                </MenuItem>
                <!--  View  -->
                <MenuItem Header="{lex:Loc Main.Menu.View}">
                    <MenuItem
                        Click="FullScreenItem_Click"
                        Header="{lex:Loc Main.Menu.View.FullScreen}"
                        Icon="{materialDesign:PackIcon Kind=Fullscreen}"
                        InputGestureText="F11" />
                    <MenuItem
                        Command="{Binding RefreshCommand}"
                        Header="{lex:Loc Main.Menu.View.Refresh}"
                        Icon="{materialDesign:PackIcon Kind=Refresh}"
                        InputGestureText="F5" />
                </MenuItem>
                <!--  Options  -->
                <MenuItem Header="{lex:Loc Main.Menu.Options}">
                    <MenuItem
                        Checked="AlwaysOnTopItem_CheckChanged"
                        Header="{lex:Loc Main.Menu.Options.AlwaysOnTop}"
                        Icon="{materialDesign:PackIcon Kind=Cog}"
                        IsCheckable="True"
                        Unchecked="AlwaysOnTopItem_CheckChanged" />
                </MenuItem>
                <!--  Help  -->
                <MenuItem Header="{lex:Loc Main.Menu.Help}">
                    <MenuItem
                        Command="{Binding UpdaterCommand}"
                        Header="{lex:Loc Main.Menu.Help.Updater}"
                        Icon="{materialDesign:PackIcon Kind=Update}" />
                    <MenuItem
                        Command="{Binding AboutCommand}"
                        Header="{lex:Loc Main.Menu.Help.About}"
                        Icon="{materialDesign:PackIcon Kind=Info}" />
                </MenuItem>
            </Menu>

            <!--  Main content  -->
            <materialDesign:Transitioner
                d:SelectedIndex="1"
                Focusable="False"
                SelectedIndex="{Binding ShowMainContent, Mode=OneWay}">
                <materialDesign:TransitionerSlide>
                    <materialDesign:TransitionerSlide.ForwardWipe>
                        <materialDesign:CircleWipe />
                    </materialDesign:TransitionerSlide.ForwardWipe>
                    <StackPanel
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Orientation="Horizontal">
                        <ProgressBar
                            VerticalAlignment="Center"
                            IsIndeterminate="{Binding HasClients, Converter={StaticResource InvertBooleanConverter}}"
                            Style="{StaticResource MaterialDesignCircularProgressBar}" />
                        <TextBlock
                            Margin="8,2,0,0"
                            VerticalAlignment="Center"
                            Style="{StaticResource MaterialDesignBody1TextBlock}"
                            Text="{lex:Loc Main.WaitingForComputers}" />
                    </StackPanel>
                </materialDesign:TransitionerSlide>

                <materialDesign:TransitionerSlide OpeningEffect="{materialDesign:TransitionEffect Kind=ExpandIn}">
                    <Grid Margin="10,0,10,10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0" Margin="0,0,0,0">
                            <!--  Connected computers indicator  -->
                            <TextBlock
                                HorizontalAlignment="Left"
                                VerticalAlignment="Bottom"
                                d:Text="{lex:Loc Main.ConnectedComputers}"
                                Style="{StaticResource MaterialDesignBody1TextBlock}">
                                <TextBlock.Text>
                                    <MultiBinding Converter="{lex:StringFormatConverter}">
                                        <Binding Source="{lex:Loc Main.ConnectedComputers}" />
                                        <Binding Mode="OneWay" Path="ClientsCount" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                            <!--  Sorting  -->
                            <StackPanel
                                Margin="0,0,0,5"
                                HorizontalAlignment="Right"
                                Orientation="Horizontal">
                                <ComboBox
                                    x:Name="SortComboBox"
                                    Margin="0,0,5,0"
                                    materialDesign:HintAssist.Hint="{lex:Loc Main.SortBy}"
                                    SelectedValue="{Binding SortProperty, Mode=TwoWay}"
                                    SelectedValuePath="Tag"
                                    Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                                    <ComboBoxItem Content="{lex:Loc Main.SortBy.Name}" Tag="Name" />
                                    <ComboBoxItem Content="{lex:Loc Main.SortBy.Version}" Tag="Version" />
                                    <ComboBoxItem Content="{lex:Loc Main.SortBy.ConnectionTime}" Tag="ConnectionTime" />
                                </ComboBox>
                                <ToggleButton
                                    x:Name="SortToggleButton"
                                    Width="30"
                                    Height="30"
                                    Padding="0"
                                    IsChecked="{Binding SortDirection, Converter={StaticResource BooleanToSortDirectionConverter}}"
                                    Style="{StaticResource MaterialDesignFlatButton}">
                                    <materialDesign:PackIcon>
                                        <materialDesign:PackIcon.Style>
                                            <Style TargetType="materialDesign:PackIcon">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="True">
                                                        <Setter Property="Kind" Value="ArrowDown" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="False">
                                                        <Setter Property="Kind" Value="ArrowUp" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </materialDesign:PackIcon.Style>
                                    </materialDesign:PackIcon>
                                </ToggleButton>
                            </StackPanel>
                        </Grid>

                        <!--  Lists  -->
                        <Grid Grid.Row="1" Margin="0,0,0,5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" MinWidth="275" />
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition Width="130" MinWidth="0" />
                            </Grid.ColumnDefinitions>

                            <!--  Connected clients  -->
                            <ListBox
                                x:Name="ComputersList"
                                Grid.Column="0"
                                d:ItemsSource="{d:SampleData ItemCount=4}"
                                ContextMenu="{StaticResource ClientContextMenu}"
                                Focusable="False"
                                ItemsSource="{Binding ClientsCollectionView}"
                                MouseDoubleClick="ComputersList_MouseDoubleClick"
                                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                SelectionMode="Extended">
                                <ListBox.ItemContainerStyle>
                                    <Style BasedOn="{StaticResource {x:Type ListBoxItem}}" TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsVisible}" Value="False">
                                                <DataTrigger.Setters>
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger.Setters>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel
                                            Width="Auto"
                                            Cursor="Hand"
                                            ToolTip="{StaticResource ClientTooltip}">
                                            <Grid Margin="0,0,0,5">
                                                <materialDesign:Card Height="134">
                                                    <Grid>
                                                        <materialDesign:PackIcon
                                                            Width="30"
                                                            Height="30"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center"
                                                            Kind="Hide" />
                                                        <Image
                                                            RenderOptions.BitmapScalingMode="Fant"
                                                            Source="{Binding Preview, FallbackValue={x:Null}}"
                                                            Stretch="Uniform" />
                                                    </Grid>
                                                </materialDesign:Card>
                                            </Grid>
                                            <StackPanel Orientation="Horizontal">
                                                <CheckBox
                                                    materialDesign:CheckBoxAssist.CheckBoxSize="20"
                                                    Content="{Binding Name}"
                                                    Cursor="Hand"
                                                    IsChecked="{Binding IsSelected, Mode=TwoWay}" />
                                            </StackPanel>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                            </ListBox>

                            <GridSplitter
                                Grid.Column="1"
                                Width="5"
                                HorizontalAlignment="Stretch"
                                Background="Transparent" />

                            <!--  Hidding clients  -->
                            <materialDesign:Card Grid.Column="2" Padding="5">
                                <StackPanel>
                                    <ItemsControl
                                        HorizontalAlignment="Left"
                                        HorizontalContentAlignment="Stretch"
                                        d:ItemsSource="{d:SampleData ItemCount=4}"
                                        Focusable="False"
                                        ItemsSource="{Binding ClientsCollectionView}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Margin="0,0,0,3" Orientation="Horizontal">
                                                    <CheckBox
                                                        HorizontalAlignment="Stretch"
                                                        VerticalAlignment="Center"
                                                        materialDesign:CheckBoxAssist.CheckBoxSize="20"
                                                        Content="{Binding Name}"
                                                        Cursor="Hand"
                                                        IsChecked="{Binding IsVisible}" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </StackPanel>
                            </materialDesign:Card>
                        </Grid>

                        <!--  Commands  -->
                        <StackPanel Grid.Row="2" Margin="0,0,0,0">
                            <CheckBox
                                x:Name="AllComputersCheckbox"
                                materialDesign:CheckBoxAssist.CheckBoxSize="20"
                                Content="{lex:Loc Main.AllComputers}"
                                Cursor="Hand"
                                IsChecked="{Binding IsBroadcast, Mode=TwoWay}"
                                IsEnabled="{Binding HasClients}" />

                            <WrapPanel
                                Margin="0,0,0,0"
                                Orientation="Horizontal"
                                Visibility="Collapsed">
                                <Button Margin="0,5,5,0" Command="{Binding LinkCommand}">
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Margin="-4,0,8,0" Kind="Link" />
                                        <TextBlock Text="{lex:Loc Main.Commands.SendLink}" />
                                    </StackPanel>
                                </Button>

                                <Button Margin="0,5,5,0" Command="{Binding MessageCommand}">
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Margin="-4,0,8,0" Kind="MessageOutline" />
                                        <TextBlock Text="{lex:Loc Main.Commands.SendMessage}" />
                                    </StackPanel>
                                </Button>

                                <Button Margin="0,5,5,0" Command="{Binding DesktopCommand}">
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Margin="-4,0,8,0" Kind="DesktopWindows" />
                                        <TextBlock Text="{lex:Loc Main.Commands.ViewDesktop}" />
                                    </StackPanel>
                                </Button>

                                <Button
                                    Margin="0,5,5,0"
                                    Command="{Binding SimpleCommand}"
                                    CommandParameter="{x:Static models:Commands.RestartApplication}">
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Margin="-4,0,8,0" Kind="ApplicationOutline" />
                                        <TextBlock Text="{lex:Loc Main.Commands.RestartApplication}" />
                                    </StackPanel>
                                </Button>

                                <Button
                                    Margin="0,5,5,0"
                                    Command="{Binding SimpleCommand}"
                                    CommandParameter="{x:Static models:Commands.Shutdown}">
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Margin="-4,0,8,0" Kind="Shutdown" />
                                        <TextBlock Text="{lex:Loc Main.Commands.Shutdown}" />
                                    </StackPanel>
                                </Button>

                                <Button
                                    Margin="0,5,5,0"
                                    Command="{Binding SimpleCommand}"
                                    CommandParameter="{x:Static models:Commands.Restart}">
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Margin="-4,0,8,0" Kind="Restart" />
                                        <TextBlock Text="{lex:Loc Main.Commands.Restart}" />
                                    </StackPanel>
                                </Button>

                                <Button
                                    Margin="0,5,5,0"
                                    Command="{Binding SimpleCommand}"
                                    CommandParameter="{x:Static models:Commands.LockScreen}">
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Margin="-4,0,8,0" Kind="LockOutline" />
                                        <TextBlock Text="{lex:Loc Main.Commands.LockScreen}" />
                                    </StackPanel>
                                </Button>

                                <Button
                                    Margin="0,5,5,0"
                                    Command="{Binding SimpleCommand}"
                                    CommandParameter="{x:Static models:Commands.LogOff}">
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Margin="-4,0,8,0" Kind="UserOutline" />
                                        <TextBlock Text="{lex:Loc Main.Commands.LogOff}" />
                                    </StackPanel>
                                </Button>


                                <Button Margin="0,5,5,0" Command="{Binding RenameCommand}">
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Margin="-4,0,8,0" Kind="RenameOutline" />
                                        <TextBlock Text="{lex:Loc Main.Commands.Rename}" />
                                    </StackPanel>
                                </Button>

                                <Button
                                    Margin="0,5,5,0"
                                    Command="{Binding SimpleCommand}"
                                    CommandParameter="{x:Static models:Commands.Update}">
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Margin="-4,0,8,0" Kind="Update" />
                                        <TextBlock Text="{lex:Loc Main.Commands.UpdateApplication}" />
                                    </StackPanel>
                                </Button>


                                <Button
                                    Margin="0,5,5,0"
                                    Command="{Binding SimpleCommand}"
                                    CommandParameter="{x:Static models:Commands.ResetPassword}">
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Margin="-4,0,8,0" Kind="KeyOutline" />
                                        <TextBlock Text="{lex:Loc Main.Commands.ResetPassword}" />
                                    </StackPanel>
                                </Button>

                                <Button
                                    Margin="0,5,5,0"
                                    Command="{Binding BlockInputCommand}"
                                    CommandParameter="true">
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Margin="-4,0,8,0" Kind="MouseOff" />
                                        <TextBlock Text="{lex:Loc Main.Commands.BlockInput}" />
                                    </StackPanel>
                                </Button>

                                <Button
                                    Margin="0,5,0,0"
                                    Command="{Binding BlockInputCommand}"
                                    CommandParameter="false">
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Margin="-4,0,8,0" Kind="MouseOutline" />
                                        <TextBlock Text="{lex:Loc Main.Commands.UnblockInput}" />
                                    </StackPanel>
                                </Button>
                            </WrapPanel>
                        </StackPanel>
                    </Grid>
                </materialDesign:TransitionerSlide>
            </materialDesign:Transitioner>
        </DockPanel>

        <materialDesign:Snackbar
            Margin="0,0,10,10"
            HorizontalAlignment="Right"
            MessageQueue="{Binding SnackbarMessageQueue}" />
    </Grid>
</Window>
